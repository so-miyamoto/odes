.. ode-collections documentation master file, created by
   sphinx-quickstart on Thu Jun 24 21:14:32 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

====================================================
Pythonで解く微分方程式(有限差分法)
====================================================

======================================
対象
======================================
数値計算をやってる物理，化学系の学生向け


======================================
はじめに
======================================
物理現象を記述する微分方程式を数値的に解く，みたいなのは理系専攻のカリキュラムでどこもやっていると思います．
とりあえず差分化してコードに直せば，解を出してくれて，グラフに直せばそのイメージが掴めるとても便利な方法です．

一方で面倒なこともあります．

一つがコードを書く手間です．
数値計算の講義ではCが主流かと思いますが，C言語は手軽に扱うには向きません．
デバッグに費やす時間もかかります．

また，刻み幅の調整も問題です．
この値が大きすぎると正しい解が得られません，また，小さすぎると計算時間がかかりすぎます．

この二つの面倒さに対し，自分なりに解決を行いましたので，紹介したいと思い，公開することにしました


=====================================
pythonとscipy.integrate.solve_ivp
=====================================

まず，言語としてPythonを採用します．pythonといえば遅い言語のイメージがありますが，数値計算ライブラリの拡充により，ちょっとした計算をやるときには個人的にほぼ一択です．
そして，pythonのscipy.integrateライブラリからsolve_ivpを用います．
solve_ivpは，(下は公式の解説)，刻み幅の自動調節を行ってくれる(連立)常微分方程式solverです．

https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html#scipy.integrate.solve_ivp

これによりできるだけ簡潔なコードから差分化された微分方程式を解いていきたいと思います．

できるだけ沢山の具体例に挑戦しましたので，結果を楽しんでいただけたらと思います．


======================================
コンテンツ
======================================
.. toctree::
   :maxdepth: 2
   :numbered:
   :glob:

   notebooks/*


=======================================
参考文献
=======================================

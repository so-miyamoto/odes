{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# テンソルODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.integrate import solve_ivp "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Maxwellの応力挙動"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "連続体を扱うとき，２階のテンソルが頻出する．\n",
    "例えばMaxwell流体の３次元構成関係を見てみよう，応力$\\sigma_{ij}$の時間発展は，$\\kappa_{ij}=\\nabla_i v_j$は速度勾配，$G$は平衡圧として，以下の形で書ける．\n",
    "$$\n",
    "    \\frac{{\\rm d}\\boldsymbol\\sigma}{{\\rm d} t} = \n",
    "    \\boldsymbol\\kappa\\cdot\\boldsymbol\\sigma + \n",
    "    \\boldsymbol\\sigma\\cdot\\boldsymbol\\kappa^T - (\\boldsymbol \\sigma-G\\boldsymbol I)\n",
    "$$\n",
    "こうなると，自分で実装するのは煩わしい．そこで，これもsolve_ivpに解いてもらおう.$xy$方向にせん断変形を与える．"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "dim = 3\n",
    "σ = np.eye(dim)\n",
    "κ = np.zeros_like(σ)\n",
    "δ = np.eye(dim)\n",
    "κ[0,1] = 1.0 # xy-shear\n",
    "init   = σ.flatten()\n",
    "t_span = [0.0,5.0]\n",
    "t_eval = np.linspace(*t_span,100) # time for sampling\n",
    "def maxwell(t,σ,κ):\n",
    "    σ = σ.reshape(dim,dim)\n",
    "    dσ = κ.dot(σ) + σ.dot(κ.T) - (σ - δ)\n",
    "    return dσ.flatten()\n",
    "sol = solve_ivp(maxwell,t_span,init,method='RK45',t_eval=t_eval,args=(κ,))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "maxwell関数内で，受け取った$\\sigma$を二次元にreshapeすること， 返り値を一次元で返す必要があることに注意する．\n",
    "\n",
    "しかし，数式をほとんどそのままの見た目で実装できるのは非常に嬉しい．　\n",
    "\n",
    "成長せん断粘度$\\eta_s = \\sigma_{xy}/\\kappa_{xy}$を見てみる．"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd5a868d850>]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(sol.t,sol.y[1]/κ[0,1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Giesekusの応力挙動"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Giesekus流体に変更してみよう．　構成式は以下の形をしている．\n",
    "$$\n",
    "    \\frac{{\\rm d}\\boldsymbol\\sigma}{{\\rm d} t} = \n",
    "    \\boldsymbol\\kappa\\cdot\\boldsymbol\\sigma + \n",
    "    \\boldsymbol\\sigma\\cdot\\boldsymbol\\kappa^T - (\\boldsymbol \\sigma-G\\boldsymbol I) -\n",
    "    \\alpha(\\boldsymbol\\sigma - G\\boldsymbol I)\\cdot (\\frac{\\boldsymbol\\sigma}{G} - \\boldsymbol I)\n",
    "$$\n",
    "パラメータ$\\alpha\\in(0,1]$に依存する非線型項を持つ．\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "dim = 3\n",
    "σ = np.eye(dim)\n",
    "κ = np.zeros_like(σ)\n",
    "δ = np.eye(dim)\n",
    "α = 0.5\n",
    "κ[0,1] = 1.0 # xy-shear\n",
    "init   = σ.flatten()\n",
    "t_span = [0.0,5.0]\n",
    "t_eval = np.linspace(*t_span,100) # time for sampling\n",
    "def giesekus(t,σ,κ,α):\n",
    "    σ = σ.reshape(dim,dim)\n",
    "    dσ = κ.dot(σ) + σ.dot(κ.T) - (σ - δ) - α * (σ - δ).dot(σ - δ)\n",
    "    return dσ.flatten()\n",
    "sol = solve_ivp(giesekus,t_span,init,method='RK45',t_eval=t_eval,args=(κ,α))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "粘度のオーバーシュートと定常値の低減（シアシニング）を観察できる"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fd591287700>]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(sol.t,sol.y[1]/κ[0,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
